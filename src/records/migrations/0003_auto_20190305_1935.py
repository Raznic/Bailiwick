# Generated by Django 2.1.7 on 2019-03-05 19:35

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('domains', '0001_initial'),
        ('records', '0002_nsrecord'),
    ]

    operations = [
        migrations.CreateModel(
            name='MxRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('mail_exchange', models.CharField(error_messages={'blank': 'Cannot be blank.', 'max_length': 'Cannot exceed 255 characters.'}, max_length=255, validators=[django.core.validators.RegexValidator(message='Must be a fully-qualified domain name.', regex='^((?=[a-z0-9-]{1,63}\\.)[a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,63}$')])),
                ('owner', models.CharField(blank=True, default='', error_messages={'max_length': 'Cannot exceed 255 characters.'}, help_text='The domain the mail exchange is authoritative for. Can be the current domain or a sub-domain. If not defined, assume the mail exchange is authoritative for the current domain.', max_length=255, validators=[django.core.validators.RegexValidator(message='Owner must be a fully-qualified domain name.', regex='^((?=[a-z0-9-]{1,63}\\.)[a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,63}$')])),
                ('preference', models.PositiveIntegerField(default=10, help_text='Preference for using this mail exchange server over others. Lower values indicate a higher preference.')),
                ('time_to_live', models.PositiveIntegerField(blank=True, default=None, help_text='Time in seconds for how long record should be cached by a resolver. If not set, inherited from domain.', null=True)),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mx_records', to='domains.Domain')),
            ],
        ),
        migrations.AlterField(
            model_name='arecord',
            name='hostname',
            field=models.CharField(error_messages={'blank': 'Cannot be blank.', 'max_length': 'Cannot exceed 63 characters.'}, max_length=63, validators=[django.core.validators.RegexValidator(message='Not a valid hostname.', regex='^[a-z0-9]+(-[a-z0-9]+)*$')]),
        ),
        migrations.AlterField(
            model_name='nsrecord',
            name='name_server',
            field=models.CharField(error_messages={'blank': 'Cannot be blank.', 'max_length': 'Cannot exceed 255 characters.'}, max_length=255, validators=[django.core.validators.RegexValidator(message='Name server must by a fully-qualified domain name.', regex='^((?=[a-z0-9-]{1,63}\\.)[a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,63}$')]),
        ),
        migrations.AlterField(
            model_name='nsrecord',
            name='owner',
            field=models.CharField(blank=True, default='', error_messages={'max_length': 'Cannot exceed 255 characters.'}, help_text='The domain the name server is authoritative for. Can be the current domain or a sub-domain. If not defined, assume the name server is authoritative for the current domain.', max_length=255, validators=[django.core.validators.RegexValidator(message='Owner must be a fully-qualified domain name.', regex='^((?=[a-z0-9-]{1,63}\\.)[a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,63}$')]),
        ),
    ]
